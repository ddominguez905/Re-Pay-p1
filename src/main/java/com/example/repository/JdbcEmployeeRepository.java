package com.example.repository;

import com.example.datasource.SQLConnectionFactory;
import com.example.entity.Employee;
import org.apache.log4j.Logger;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Optional;

public class JdbcEmployeeRepository implements EmployeeRepository {
    private static final Logger loggy = Logger.getLogger("ERS");

    @Override
    /*Loading Employee from database*/
    public Optional<Employee> findById(int emp_id) {
        loggy.info("loading employee: " + emp_id); //LOG for debugging
        try (Connection connection = SQLConnectionFactory.getConnection();) { //This will automatically close the connection
            String sql = "select * from employees where emp_Id=?"; //SQL statement from postgres to get every column from employee table
            PreparedStatement ps = connection.prepareStatement(sql); //Pre compiles the sqlcode
            ps.setString(1, String.valueOf(emp_id));
            ResultSet rs = ps.executeQuery(); //A table of data representing a database result set, which is usually generated by
                                            // executing a statement that queries the database
            if (rs.next()) {
                Employee employee = new Employee();
                employee.setFirstName(rs.getString("firstName"));
                employee.setLastName(rs.getString("LastName"));
                return Optional.of(employee);
            }
        } catch (SQLException e) {
            loggy.error("error loading employee: " + emp_id);
            e.printStackTrace();
        }
        return Optional.empty();
    }

    @Override
    public void update(Employee employee) {
        loggy.info("updating employee: " + employee.getEmp_id());
        try (Connection connection = SQLConnectionFactory.getConnection();) {
//            String sqlCode = "update employees set emp_name=? where emp_id=?";
//            PreparedStatement ps = connection.prepareStatement(sqlCode);
//            ps.setString(1, employee.getEmp_Name());
//            ps.setString(2, employee.getEmp_ID());
//            ps.executeUpdate();
        } catch (SQLException e) {
            LOG.error("error updating employee: " + employee.getEmp_id());
            e.printStackTrace();
        }

    }

    @Override
    public void save(Employee employee) {

    }

    @Override
    public void delete(Employee employee) {

    }
}
